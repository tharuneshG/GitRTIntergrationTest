name: Create Task List from PR

on:
  pull_request:
    types: [opened, reopened]

jobs:
  create-task-list:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Determine Task List Filename
        id: determine-filename
        run: |
          PR_TITLE="${{ github.event.pull_request.title }}"
          if [[ "$PR_TITLE" == *"task1"* ]]; then
            echo "task_list_1.md" > filename.txt
          elif [[ "$PR_TITLE" == *"task2"* ]]; then
            echo "task_list_2.md" > filename.txt
          else
            echo "No matching task list found for PR title"
            exit 1
          fi

      - name: Get File Contents
        id: get-file
        run: |
          FILENAME=$(cat filename.txt)
          file_content=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
                "https://api.github.com/repos/tharuneshG/taskList/contents/docs/${FILENAME}")
          ENCODED_CONTENT=$(echo "$file_content" | jq -r '.content')
          DECODED_CONTENT=$(echo "$ENCODED_CONTENT" | base64 --decode)
          echo "$DECODED_CONTENT" > decoded_content.txt

      - name: Create Task List Comment
        uses: actions/github-script@v4
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const decodedContent = require('fs').readFileSync('decoded_content.txt', 'utf8');
            const comment = `
            ### Task List
            
            ${decodedContent}
            `;
            github.issues.createComment({
              issue_number: context.issue.number,
              owner: 'tharuneshG',  // Replace with the owner of the repository
              repo: 'taskList',   // Replace with the name of the repository
              body: comment
            });
